import{_ as l,c as i,a2 as e,o}from"./chunks/framework.Bt53DRYp.js";const t="/assets/PythonTutorial.BXQ-GmsC.png",r="/assets/StandLib.vI4P6s08.png",n="/assets/PythonDemo.DW4U8aB4.png",f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python/Python 学习指南.md","filePath":"Python/Python 学习指南.md"}'),h={name:"Python/Python 学习指南.md"};function p(s,a,d,c,u,P){return o(),i("div",null,a[0]||(a[0]=[e('<p>% Python 学习指南</p><p>Python,指南</p><hr><p>#::Copyright</p><ul><li>作者 = xiaowang (<a href="mailto:xer345@126.com" target="_blank" rel="noreferrer">xer345@126.com</a>)</li><li>日期 = 2017-04-11</li><li>时间 = 2017-04-11 18:25:48 / 2017-04-20 16:58:39</li><li>链接 = <a href="http://onlookee.com/?c=Article&amp;a=view&amp;id=7" target="_blank" rel="noreferrer">Python 学习指南</a></li><li>版本 = 1.0</li><li>关于 = <a href="http://onlookee.com/" target="_blank" rel="noreferrer">ONLOOKEE.COM</a> 一直在分享有价值的软件/应用 、Python经验。</li></ul><p>#::文章信息</p><ul><li>类别 = Python</li><li>平台 = Windows,Mac,Linux</li><li>官网 = <a href="https://www.python.org/" target="_blank" rel="noreferrer">Welcome to Python.org</a></li></ul><p>#::截图照片</p><ul><li><img src="'+t+`" alt="主界面"></li></ul><p>#::文章内容</p><ul><li><a href="#教学材料">教学材料</a></li><li><a href="#经验之谈">经验之谈</a></li><li><a href="#运行环境">运行环境</a><ul><li><a href="#anaconda">Anaconda</a></li></ul></li><li><a href="#开发工具-ide">开发工具 &amp; IDE</a><ul><li><a href="#文本编辑器">文本编辑器</a></li><li><a href="#ide">IDE</a></li></ul></li><li><a href="#学习路径">学习路径</a><ul><li><a href="#基础知识">基础知识</a></li><li><a href="#常用标准库">常用标准库</a></li><li><a href="#正则表达式">正则表达式</a></li><li><a href="#编写一些范例">编写一些范例</a></li><li><a href="#进阶">进阶</a></li><li><a href="#实战">实战</a></li></ul></li></ul><p>作为主流的动态语言，Python不仅简单易学、移植性好，而且拥有强大丰富的库的支持。此外，Python强大的可扩展性，让开发人员既可以非常容易地利用C/C++编写Python的扩展模块，还能将Python嵌入到C/C++程序中，为自己的系统添加动态扩展和动态编程的能力。</p><p>Python 的设计哲学之一就是简单易学，体现在两个方面：</p><ul><li>语法简洁明了：相对 Ruby 和 Perl，它的语法特性不多不少，大多数都很简单直接，不玩儿玄学。</li><li>切入点很多：Python 可以让你可以做很多事情，科学计算和数据分析、爬虫、Web 网站、游戏、命令行实用工具等等等等，总有一个是你感兴趣并且愿意投入时间的。</li></ul><h2 id="教学材料" tabindex="-1">教学材料 <a class="header-anchor" href="#教学材料" aria-label="Permalink to &quot;教学材料&quot;">​</a></h2><p>一些适合初学者入门的教学材料</p><ul><li>『<a href="https://learnpythonthehardway.org/book/" target="_blank" rel="noreferrer">Learn Python the Hard Way - Read for Free</a>』 - 这本书在讲解 Python 的语法成分时，还附带大量可实践的例子，非常适合快速起步。</li><li>『<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noreferrer">Python教程 - 廖雪峰的官方网站</a>』 <ul><li>中文教程的翘楚，专为刚刚步入程序世界的小白打造。</li></ul></li><li>『<a href="http://docs.python-guide.org/en/latest/" target="_blank" rel="noreferrer">The Hitchhiker’s Guide to Python! — The Hitchhiker’s Guide to Python</a>』 - 这本指南着重于 Python 的最佳实践，不管你是 Python 专家还是新手，都能获得极大的帮助。</li><li>『<a href="https://www.python.org/doc/" target="_blank" rel="noreferrer">Our Documentation | Python.org</a>』 - 官方文档，权威指南。</li><li>『<a href="http://www.pythontutor.com/" target="_blank" rel="noreferrer">Python Tutor - Visualize Python, Java, JavaScript, TypeScript, Ruby, C, and C++ code execution</a>』 - 一个 Python 对象可视化的项目，用图形辅助你理解 Python 中的各种概念。</li></ul><h2 id="经验之谈" tabindex="-1">经验之谈 <a class="header-anchor" href="#经验之谈" aria-label="Permalink to &quot;经验之谈&quot;">​</a></h2><p>本人在学习 Python 的时候，遇到的最大问题就是编码问题，曾一度因此放弃了 Python。</p><p>因为是在 Windows 下，因为是中文，然后，经常出现编码异常。然后，就卡在那里了。因为是经常出现，又无从解决，几度差点就放弃 Python 了。</p><p>对于编码问题，本人现在有了一个相对完美的解决方案。但是，对于初学者，很可能就会因此而止步。因此，对于初学 Python 的同学，可以先遵循以下几点建议：</p><ul><li>如果有条件，尽量在 Linux 环境下学习 Python；</li><li>如果一定要在 Windows 环境下学习，尽量不要使用中文，以及其他双字节字符；</li><li>统一使用“utf-8”编码；</li></ul><h2 id="运行环境" tabindex="-1">运行环境 <a class="header-anchor" href="#运行环境" aria-label="Permalink to &quot;运行环境&quot;">​</a></h2><p>如果你使用的是 Unix、Linux、MacOS 等操作系统，则多半你的系统已经包含了 Phthon 的基本运行环境，但通常是相对比较旧的版本。如果你使用的是 Windows，则默认是不能运行 Python 程序的。</p><p>从某种意义来说，你都需要自己重新建立 Python 的运行环境，这里推荐使用 Anaconda - 一个包含了众多科学计算库的 Python 发行版。Anaconda 支持 Linux、MacOS、Windows，提供了包管理与环境的功能，并且集成了大量优秀的第三方库、科学计算工具等等。</p><p>当然，如果你希望从头一步一步学习，加深对 Python 各个功能组件的理解，则用『<a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer">官方版本</a>』来搭建运行环境是最佳选择。</p><h3 id="anaconda" tabindex="-1">Anaconda <a class="header-anchor" href="#anaconda" aria-label="Permalink to &quot;Anaconda&quot;">​</a></h3><p>对于初学 Python 的同学，任何问题都可能成为拦路虎。为了不至于打击学习的热情，建议还是使用 Anaconda 或类似的集成安装包来搭建运行环境。</p><p>Anaconda 有两个不同版本的 Anaconda，分别对应 Python 2.7 和 Python 3.5，两个版本其实除了这点区别外其他都一样。后面我们会看到，安装哪个版本并无本质区别，因为通过环境管理，我们可以很方便地切换运行时的 Python 版本。</p><p>安装 Anaconda 时，尽量按照 Anaconda 默认的行为安装——不使用 root 权限，仅为个人安装，安装目录设置在个人主目录下（Windows 就无所谓了）。这样的好处是，同一台机器上的不同用户完全可以安装、配置自己的 Anaconda，不会互相影响。</p><p>对于 Mac、Linux 系统，Anaconda 安装好后，实际上就是在主目录下多了个文件夹（~/anaconda）而已，Windows 会写入注册表。安装时，安装程序会把 bin 目录加入 PATH（Linux/Mac 写入~/.bashrc，Windows 下则会把 Anaconda 的安装路径添加到系统变量 PATH），这些操作也完全可以自己完成。以 Linux/Mac 为例，安装完成后设置 PATH 的操作如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 将 anaconda 的 bin 目录加入 PATH，根据版本不同，也可能是~/anaconda3/bin</span></span>
<span class="line"><span>echo &#39;export PATH=&quot;~/anaconda2/bin:$PATH&quot;&#39; &gt;&gt; ~/.bashrc</span></span>
<span class="line"><span># 更新 bashrc 以立即生效</span></span>
<span class="line"><span>source ~/.bashrc</span></span></code></pre></div><p>配置好 PATH 后，可以通过<code>which conda</code>或<code>conda --version</code>命令检查是否正确。假如安装的是 Python 2.7 对应的版本，运行<code>python --version</code>或<code>python -V</code>可以得到“Python 2.7.12 :: Anaconda 4.1.1 (64-bit)”，也说明该发行版默认的环境是 Python 2.7。</p><h2 id="开发工具-ide" tabindex="-1">开发工具 &amp; IDE <a class="header-anchor" href="#开发工具-ide" aria-label="Permalink to &quot;开发工具 &amp; IDE&quot;">​</a></h2><p>工欲善其事，必先利其器。</p><p>可以使用任何一款文本编辑器来开发 Python，但一款优秀的 IDE 则会极大的提高开发的效率。</p><p>推荐使用 PyCharm IDE。</p><h3 id="文本编辑器" tabindex="-1">文本编辑器 <a class="header-anchor" href="#文本编辑器" aria-label="Permalink to &quot;文本编辑器&quot;">​</a></h3><ul><li><a href="http://www.sublimetext.com/3" target="_blank" rel="noreferrer">Sublime Text</a></li><li><a href="https://atom.io/" target="_blank" rel="noreferrer">Atom</a></li><li><a href="https://code.visualstudio.com/Download" target="_blank" rel="noreferrer">Visual Studio Code</a></li></ul><h3 id="ide" tabindex="-1">IDE <a class="header-anchor" href="#ide" aria-label="Permalink to &quot;IDE&quot;">​</a></h3><ul><li><a href="https://www.jetbrains.com/pycharm/download/" target="_blank" rel="noreferrer">PyCharm IDE</a> = 本人心目中的最佳 Python IDE</li><li><a href="https://www.eclipse.org/downloads/" target="_blank" rel="noreferrer">Eclipse Downloads</a> + <a href="http://www.pydev.org/" target="_blank" rel="noreferrer">PyDev</a> = 如果你习惯了 Eclipse，这个也是不错的选择</li><li><a href="https://bitbucket.org/spyder-ide/spyderlib/" target="_blank" rel="noreferrer">spyder-ide / spyderlib — Bitbucket</a> = 最大特点是模仿 MATLAB 的“工作空间”的功能，可以很方便地观察和修改数组的值</li></ul><h2 id="学习路径" tabindex="-1">学习路径 <a class="header-anchor" href="#学习路径" aria-label="Permalink to &quot;学习路径&quot;">​</a></h2><h3 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h3><ul><li>基本语法 <ul><li>数据结构 <ul><li>数字</li><li>字符串</li><li>集合 <ul><li>列表</li><li>元组</li><li>字典</li><li>集合</li></ul></li></ul></li><li>判断语句</li><li>循环</li><li>列表/字典推导式</li><li>函数</li><li>模块 &amp; 包</li><li>异常</li></ul></li></ul><h3 id="常用标准库" tabindex="-1">常用标准库 <a class="header-anchor" href="#常用标准库" aria-label="Permalink to &quot;常用标准库&quot;">​</a></h3><p><img src="`+r+'" alt="标准库"></p><p>标准库</p><ul><li>最常用 <ul><li>sys</li><li>os</li></ul></li><li>字符串 &amp; 数字 <ul><li>re</li><li>math</li></ul></li><li>日期 &amp; 时间 <ul><li>time</li><li>datetime</li></ul></li><li>文件 &amp; 目录 <ul><li>codecs</li><li>shutil</li><li>glob</li></ul></li><li>数据 <ul><li>sqlite</li><li>csv</li><li>json</li></ul></li><li>日志 <ul><li>logging</li></ul></li></ul><h3 id="正则表达式" tabindex="-1">正则表达式 <a class="header-anchor" href="#正则表达式" aria-label="Permalink to &quot;正则表达式&quot;">​</a></h3><p>本人未经证实的发现，编程的时候，多数情况都是在进行字符串的处理。因此，掌握对字符串的各种处理是必备技能。而正则表达式则是处理字符串的法宝。</p><h3 id="编写一些范例" tabindex="-1">编写一些范例 <a class="header-anchor" href="#编写一些范例" aria-label="Permalink to &quot;编写一些范例&quot;">​</a></h3><p><img src="'+n+'" alt="Python DEMO"></p><p>Python DEMO</p><ul><li>数字结构 <ul><li>数字</li><li>字符串 <ul><li>正则表达式</li></ul></li><li>集合 <ul><li>列表</li><li>元组</li><li>字典</li><li>集合</li></ul></li></ul></li><li>常见处理 <ul><li>日期 &amp; 时间</li><li>文件 &amp; 目录</li><li>数据库 <ul><li>SQLite</li><li>MySQL</li><li>CSV</li></ul></li><li>网络与多线程</li></ul></li></ul><h3 id="进阶" tabindex="-1">进阶 <a class="header-anchor" href="#进阶" aria-label="Permalink to &quot;进阶&quot;">​</a></h3><ul><li>迭代器</li><li>生成器</li><li>修饰符</li><li>with 上下文管理</li><li>对象关系映射</li><li>多线程</li><li>网络</li></ul><h3 id="实战" tabindex="-1">实战 <a class="header-anchor" href="#实战" aria-label="Permalink to &quot;实战&quot;">​</a></h3><p>Python 可以让你可以做很多事情，科学计算和数据分析、爬虫、Web 网站、游戏、命令行实用工具等等等等，总有一个是你感兴趣并且愿意投入时间的。</p><p>#::相关下载</p><p><a href="http://onlookee.com/?c=Article&amp;a=download&amp;id=7" target="_blank" rel="noreferrer">下载地址 = http://onlookee.com/?c=Article&amp;a=download&amp;id=7</a></p><p>#::theEnd</p>',61)]))}const b=l(h,[["render",p]]);export{f as __pageData,b as default};
